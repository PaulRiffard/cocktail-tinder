{"version":3,"sources":["pages/Home.jsx","App.js","index.js"],"names":["Home","useState","loading","setLoading","error","setError","cocktail","setCocktail","fetchCocktail","useCallback","fetch","then","res","json","data","localStorage","getItem","JSON","parse","find","c","id","drinks","idDrink","currentCoktail","title","strDrink","imgSrc","strDrinkThumb","currentCocktail","cocktails","push","setItem","stringify","stockCocktail","catch","likeCocktail","like","length","useEffect","onClick","className","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA+EeA,EA7EF,WAAO,IAAD,EACaC,oBAAS,GADtB,mBACVC,EADU,KACDC,EADC,OAESF,oBAAS,GAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAGeJ,mBAAS,MAHxB,mBAGVK,EAHU,KAGAC,EAHA,KAeXC,EAAgBC,uBAAY,WAChCN,GAAW,GACXE,GAAS,GAETK,MAAM,0DACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAIL,IAHkBC,aAAaC,QAAQ,aACnCC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,IACUG,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOP,EAAKQ,OAAO,GAAGC,WAChDf,QADF,CAIA,IAAMgB,EAAiB,CACrBH,GAAIP,EAAKQ,OAAO,GAAGC,QACnBE,MAAOX,EAAKQ,OAAO,GAAGI,SACtBC,OAAQb,EAAKQ,OAAO,GAAGM,eAEzBrB,EAAYiB,GA7BI,SAACK,GACrB,GAAKd,aAAaC,QAAQ,aAA1B,CAIA,IAAMc,EAAYb,KAAKC,MAAMH,aAAaC,QAAQ,cAClDc,EAAUC,KAAKF,GACfd,aAAaiB,QAAQ,YAAaf,KAAKgB,UAAUH,SAL/Cf,aAAaiB,QAAQ,YAAaf,KAAKgB,UAAU,CAACJ,KA4BhDK,CAAcV,GACdrB,GAAW,OAEZgC,OAAM,WACL9B,GAAS,GACTF,GAAW,QAEd,IAEGiC,EAAe,SAACC,GACpB,IAAInC,EAAJ,CACA,IAAM4B,EAAYb,KAAKC,MAAMH,aAAaC,QAAQ,cAClDc,EAAUA,EAAUQ,OAAS,GAAGD,KAAOA,EACvCtB,aAAaiB,QAAQ,YAAaf,KAAKgB,UAAUH,IACjDtB,MAgBF,OAJA+B,qBAAU,WACR/B,MACC,CAACA,IAGF,iCACE,iDACA,wBAAQgC,QAAS,kBAAMJ,GAAa,IAApC,oBACA,wBAAQI,QAAS,kBAAMJ,GAAa,IAApC,2BACClC,GAAW,8CACXE,GAAS,0DACRF,IAAYE,GAlBd,sBAAKqC,UAAU,WAAf,UACE,6BAAKnC,EAASmB,QACd,qBAAKiB,IAAKpC,EAASqB,OAAQgB,IAAKrC,EAASmB,eCrDlCmB,EAFH,kBAAM,cAAC,EAAD,K,MCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fdacc4d2.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [cocktail, setCocktail] = useState(null);\n\n  const stockCocktail = (currentCocktail) => {\n    if (!localStorage.getItem(\"cocktails\")) {\n      localStorage.setItem(\"cocktails\", JSON.stringify([currentCocktail]));\n      return;\n    }\n    const cocktails = JSON.parse(localStorage.getItem(\"cocktails\"));\n    cocktails.push(currentCocktail);\n    localStorage.setItem(\"cocktails\", JSON.stringify(cocktails));\n  };\n\n  const fetchCocktail = useCallback(() => {\n    setLoading(true);\n    setError(false);\n\n    fetch(\"https://www.thecocktaildb.com/api/json/v1/1/random.php\")\n      .then((res) => res.json())\n      .then((data) => {\n        const cocktails = localStorage.getItem(\"cocktails\")\n          ? JSON.parse(localStorage.getItem(\"cocktails\"))\n          : [];\n        if (cocktails.find((c) => c.id === data.drinks[0].idDrink)) {\n          fetchCocktail();\n          return;\n        }\n        const currentCoktail = {\n          id: data.drinks[0].idDrink,\n          title: data.drinks[0].strDrink,\n          imgSrc: data.drinks[0].strDrinkThumb,\n        };\n        setCocktail(currentCoktail);\n        stockCocktail(currentCoktail);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  const likeCocktail = (like) => {\n    if (loading) return;\n    const cocktails = JSON.parse(localStorage.getItem(\"cocktails\"));\n    cocktails[cocktails.length - 1].like = like;\n    localStorage.setItem(\"cocktails\", JSON.stringify(cocktails));\n    fetchCocktail();\n  };\n\n  const renderCocktail = () => {\n    return (\n      <div className=\"cocktail\">\n        <h2>{cocktail.title}</h2>\n        <img src={cocktail.imgSrc} alt={cocktail.title} />\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    fetchCocktail();\n  }, [fetchCocktail]);\n\n  return (\n    <main>\n      <h1>Cocktail Tinder</h1>\n      <button onClick={() => likeCocktail(true)}>J'aime</button>\n      <button onClick={() => likeCocktail(false)}>Je n'aime pas</button>\n      {loading && <p>Chargement...</p>}\n      {error && <p>Une erreur est survenue.</p>}\n      {!loading && !error && renderCocktail()}\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nconst App = () => <Home />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/styles/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}